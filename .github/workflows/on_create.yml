name: create repo

on: [create]

jobs:
  build:
    runs-on: ubuntu-latest

#    if: endsWith(github.ref, '/master') && !contains(github.repository, 'easyExampleApp')

    steps:

    - name: Check-out repository
      uses: actions/checkout@v2

    - name: Replace names
      shell: bash
      run: |
        export REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        export APP_NAME=$(echo "$REPOSITORY_NAME" | sed -e "s/App//")
        git mv easyExampleApp $REPOSITORY_NAME
        cp ./.github/defaults/probot-settings.yml ./
        find . -path '*/.git*' -prune -o -type f -exec sed -i 's/easyExampleApp\b/'$REPOSITORY_NAME'/g' {} +
        find . -path '*/.git*' -prune -o -type f -exec sed -i 's/easyExample\b/'$APP_NAME'/g' {} +

    - name: Clean up
      shell: bash
      run: |
        git rm ./.github/workflows/on_create.yml
        git rm -f --cached ./.github/defaults/probot-settings.yml

    - name: Commit changes
      run: |
        git config --global user.name 'On Create Bot'
        git commit -am 'Automated Repo Maker'
        git push --set-upstream origin master --force

    - name: Create branches
      run: |
        git checkout -b develop
        git push origin develop:develop
        git checkout -b release
        git push origin release:release
        git checkout master

    - name: Set up Python environment
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Update branch protections
      run: |
        pip install pyyaml requests
        python tools/Scripts/BranchProtection.py
      env:
        INPUT_GITHUB-TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        INPUT_CONFIG-FILE: ./probot-settings.yml

    - name: Manage repo
      uses: mattsb42/repo-manager@v1.1.0
      with:
        github-token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        config-file: ./probot-settings.yml
        debug: true
